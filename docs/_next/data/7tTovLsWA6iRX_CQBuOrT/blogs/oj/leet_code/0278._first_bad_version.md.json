{"pageProps":{"blog":{"name":"0278._first_bad_version.md","categories":["oj","leet_code"],"content":"\n# First Bad Version\n\n## Description\n\n[doc](https://leetcode.com/problems/first-bad-version/)\n\n## Solutions\n\n### First Idea\n\n```javascript\n/**\n * Definition for isBadVersion()\n *\n * @param {integer} version number\n * @return {boolean} whether the version is bad\n * isBadVersion = function(version) {\n *     ...\n * };\n */\n\n/**\n * @param {function} isBadVersion()\n * @return {function}\n */\nvar solution = function (isBadVersion) {\n  /**\n   * @param {integer} n Total versions\n   * @return {integer} The first bad version\n   */\n  return function (n) {\n    let low = 1\n    let high = n\n\n    while (low <= high) {\n      const middle = low + Math.floor((high - low) / 2)\n      if (low === middle) {\n        return isBadVersion(low) ? low : low + 1\n      }\n\n      isBadVersion(middle) ? (high = middle) : (low = middle)\n    }\n\n    return -1\n  }\n}\n```\n\n- Time Complexity: O(logn)\n- Space Complexity: O(1)\n","meta":{"title":"First Bad Version","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>First Bad Version</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/first-bad-version/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>/**\n * Definition for isBadVersion()\n *\n * @param {integer} version number\n * @return {boolean} whether the version is bad\n * isBadVersion = function(version) {\n *     ...\n * };\n */\n\n/**\n * @param {function} isBadVersion()\n * @return {function}\n */\nvar solution = function (isBadVersion) {\n  /**\n   * @param {integer} n Total versions\n   * @return {integer} The first bad version\n   */\n  return function (n) {\n    let low = 1\n    let high = n\n\n    while (low &#x3C;= high) {\n      const middle = low + Math.floor((high - low) / 2)\n      if (low === middle) {\n        return isBadVersion(low) ? low : low + 1\n      }\n\n      isBadVersion(middle) ? (high = middle) : (low = middle)\n    }\n\n    return -1\n  }\n}\n</code></pre>\n<ul>\n<li>Time Complexity: O(logn)</li>\n<li>Space Complexity: O(1)</li>\n</ul>\n"},"__N_SSG":true}