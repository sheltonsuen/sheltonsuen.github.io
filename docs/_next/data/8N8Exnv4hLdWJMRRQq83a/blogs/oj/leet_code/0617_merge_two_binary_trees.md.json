{"pageProps":{"blog":{"name":"0617_merge_two_binary_trees.md","categories":["oj","leet_code"],"content":"\n# Merge Two Binary Trees\n\n## Description\n\n[doc](https://leetcode.com/problems/merge-two-binary-trees/)\n\n## Solutions\n\n### DFS\n\n```javascript\n/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {TreeNode}\n */\nvar mergeTrees = function (root1, root2) {\n  if (!root1 || !root2) {\n    return root1 || root2\n  }\n\n  root1.left = mergeTrees(root1.left, root2.left)\n  root1.right = mergeTrees(root1.right, root2.right)\n\n  root1.val += root2.val\n\n  return root1\n}\n```\n","meta":{"title":"Merge Two Binary Trees","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Merge Two Binary Trees</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/merge-two-binary-trees/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>DFS</h3>\n<pre><code>/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root1\n * @param {TreeNode} root2\n * @return {TreeNode}\n */\nvar mergeTrees = function (root1, root2) {\n  if (!root1 || !root2) {\n    return root1 || root2\n  }\n\n  root1.left = mergeTrees(root1.left, root2.left)\n  root1.right = mergeTrees(root1.right, root2.right)\n\n  root1.val += root2.val\n\n  return root1\n}\n</code></pre>\n"},"__N_SSG":true}