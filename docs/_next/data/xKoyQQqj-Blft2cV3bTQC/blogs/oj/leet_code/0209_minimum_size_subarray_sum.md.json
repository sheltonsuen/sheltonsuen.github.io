{"pageProps":{"blog":{"name":"0209_minimum_size_subarray_sum.md","categories":["oj","leet_code"],"content":"\n# Minimum Size Subarray Sum\n\n## Description\n\n[doc](https://leetcode.com/problems/minimum-size-subarray-sum/)\n\n## Solutions\n\n### First Idea\n\n```javascript\n/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let [start, end] = [0, 0]\n  let sum = 0\n  let minLen = Number.MAX_SAFE_INTEGER\n\n  while (end < nums.length) {\n    sum += nums[end++]\n\n    while (start < end && sum >= target) {\n      minLen = Math.min(minLen, end - start)\n      sum -= nums[start++]\n    }\n  }\n\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen\n}\n```\n\n- Time Complexity: O(n)\n- Space Complexity: O(1)\n","meta":{"title":"Minimum Size Subarray Sum","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Minimum Size Subarray Sum</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/minimum-size-subarray-sum/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let [start, end] = [0, 0]\n  let sum = 0\n  let minLen = Number.MAX_SAFE_INTEGER\n\n  while (end &#x3C; nums.length) {\n    sum += nums[end++]\n\n    while (start &#x3C; end &#x26;&#x26; sum >= target) {\n      minLen = Math.min(minLen, end - start)\n      sum -= nums[start++]\n    }\n  }\n\n  return minLen === Number.MAX_SAFE_INTEGER ? 0 : minLen\n}\n</code></pre>\n<ul>\n<li>Time Complexity: O(n)</li>\n<li>Space Complexity: O(1)</li>\n</ul>\n"},"__N_SSG":true}