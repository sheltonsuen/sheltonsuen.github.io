{"pageProps":{"blog":{"name":"0035_search_insert_position.md","categories":["oj","leet_code"],"content":"\n# Search Insert Position\n\n## Descripition\n\n## Solutions\n\n### First Idea\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar searchInsert = function (nums, target) {\n  let low = 0\n  let high = nums.length - 1\n\n  // only ->> [low v high] [low v, v high] ->> [low, high]\n  while (low < high) {\n    const middle = low + Math.floor((high - low) / 2)\n    if (nums[middle] === target) {\n      return middle\n    }\n\n    nums[middle] < target ? (low = middle + 1) : (high = middle - 1)\n  }\n\n  return target > nums[low] ? low + 1 : low\n}\n```\n\n-- Time Complexity: O(logn)\n-- Space Complexity: O(1)\n","meta":{"title":"Search Insert Position","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Search Insert Position</h1>\n<h2>Descripition</h2>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar searchInsert = function (nums, target) {\n  let low = 0\n  let high = nums.length - 1\n\n  // only ->> [low v high] [low v, v high] ->> [low, high]\n  while (low &#x3C; high) {\n    const middle = low + Math.floor((high - low) / 2)\n    if (nums[middle] === target) {\n      return middle\n    }\n\n    nums[middle] &#x3C; target ? (low = middle + 1) : (high = middle - 1)\n  }\n\n  return target > nums[low] ? low + 1 : low\n}\n</code></pre>\n<p>-- Time Complexity: O(logn)\n-- Space Complexity: O(1)</p>\n"},"__N_SSG":true}