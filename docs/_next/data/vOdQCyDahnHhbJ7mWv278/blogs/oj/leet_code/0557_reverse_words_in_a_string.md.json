{"pageProps":{"blog":{"name":"0557_reverse_words_in_a_string.md","categories":["oj","leet_code"],"content":"\n# Reverse Words in a String III\n\n## Description\n\n[doc](https://leetcode.com/problems/reverse-words-in-a-string-iii/)\n\n## Solutions\n\n### First Idea\n\n```javascript\n/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s\n    .split(' ')\n    .map((word) => word.split('').reverse().join(''))\n    .join(' ')\n}\n```\n\n-- Time Complexity: O(n)\n-- Space Complexity: O(n)\n\n### Manual way\n\n```javascript\n/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  let result = []\n  let i = 0\n  let cur = 0\n\n  while (cur < s.length) {\n    while (s.charAt(cur) !== ' ' && cur < s.length) {\n      cur++\n    }\n\n    let end = s.charAt(cur) === ' ' ? cur - 1 : cur\n    let rightCur = end\n    while (i <= end) {\n      result[i++] = s.charAt(rightCur--)\n    }\n\n    if (s.charAt(cur) === ' ') {\n      result[i++] = s.charAt(cur)\n    }\n    cur++\n  }\n\n  return result.join('')\n}\n```\n\n-- Time Complexity: O(n)\n-- Space Complexity: O(n)\n","meta":{"title":"Reverse Words in a String III","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Reverse Words in a String III</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/reverse-words-in-a-string-iii/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  return s\n    .split(' ')\n    .map((word) => word.split('').reverse().join(''))\n    .join(' ')\n}\n</code></pre>\n<p>-- Time Complexity: O(n)\n-- Space Complexity: O(n)</p>\n<h3>Manual way</h3>\n<pre><code>/**\n * @param {string} s\n * @return {string}\n */\nvar reverseWords = function (s) {\n  let result = []\n  let i = 0\n  let cur = 0\n\n  while (cur &#x3C; s.length) {\n    while (s.charAt(cur) !== ' ' &#x26;&#x26; cur &#x3C; s.length) {\n      cur++\n    }\n\n    let end = s.charAt(cur) === ' ' ? cur - 1 : cur\n    let rightCur = end\n    while (i &#x3C;= end) {\n      result[i++] = s.charAt(rightCur--)\n    }\n\n    if (s.charAt(cur) === ' ') {\n      result[i++] = s.charAt(cur)\n    }\n    cur++\n  }\n\n  return result.join('')\n}\n</code></pre>\n<p>-- Time Complexity: O(n)\n-- Space Complexity: O(n)</p>\n"},"__N_SSG":true}