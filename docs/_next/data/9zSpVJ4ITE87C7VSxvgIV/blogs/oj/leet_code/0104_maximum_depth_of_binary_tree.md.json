{"pageProps":{"blog":{"name":"0104_maximum_depth_of_binary_tree.md","categories":["oj","leet_code"],"content":"\n# Maximum Depth of Binary Tree\n\n## Description\n\n[doc](https://leetcode.com/problems/maximum-depth-of-binary-tree/)\n\n## Solutions\n\n### First Idea\n\n```javascript\n/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function (root) {\n  if (root === null) {\n    return 0\n  }\n\n  return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1\n}\n```\n\n- Time Complexity: O(n)\n- Space Complexity: O(1)\n","meta":{"title":"Maximum Depth of Binary Tree","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Maximum Depth of Binary Tree</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/maximum-depth-of-binary-tree/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar maxDepth = function (root) {\n  if (root === null) {\n    return 0\n  }\n\n  return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1\n}\n</code></pre>\n<ul>\n<li>Time Complexity: O(n)</li>\n<li>Space Complexity: O(1)</li>\n</ul>\n"},"__N_SSG":true}