{"pageProps":{"blog":{"name":"0567_permutation_in_string.md","categories":["oj","leet_code"],"content":"\n# Permutation in String\n\n## Description\n\n[doc](https://leetcode.com/problems/permutation-in-string/)\n\n## Solutions\n\n### First Idea\n\n```javascript\n/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */\nvar checkInclusion = function (s1, s2) {\n  let map = new Map()\n  const reset = () => map.forEach(({ count, cur }, k) => map.set(k, { count, cur: 0 }))\n\n  for (let i = 0; i < s1.length; i++) {\n    const ch = s1.charAt(i)\n    map.has(ch) ? map.set(ch, { count: map.get(ch).count + 1, cur: 0 }) : map.set(ch, { count: 1, cur: 0 })\n  }\n\n  for (let i = 0; i <= s2.length - s1.length; i++) {\n    reset()\n    for (let j = 0; j < s1.length; j++) {\n      const ch = s2.charAt(j + i)\n      if (!map.has(ch)) {\n        break\n      }\n\n      const { count, cur } = map.get(ch)\n      if (cur >= count) {\n        break\n      }\n\n      map.set(ch, { count, cur: cur + 1 })\n\n      if (j === s1.length - 1) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n```\n\n-- Time Complexiy: O(n^2)\n-- Space Complexiy: O(n)\n### Refine Performance TODO:\n","meta":{"title":"Permutation in String","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Permutation in String</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/permutation-in-string/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */\nvar checkInclusion = function (s1, s2) {\n  let map = new Map()\n  const reset = () => map.forEach(({ count, cur }, k) => map.set(k, { count, cur: 0 }))\n\n  for (let i = 0; i &#x3C; s1.length; i++) {\n    const ch = s1.charAt(i)\n    map.has(ch) ? map.set(ch, { count: map.get(ch).count + 1, cur: 0 }) : map.set(ch, { count: 1, cur: 0 })\n  }\n\n  for (let i = 0; i &#x3C;= s2.length - s1.length; i++) {\n    reset()\n    for (let j = 0; j &#x3C; s1.length; j++) {\n      const ch = s2.charAt(j + i)\n      if (!map.has(ch)) {\n        break\n      }\n\n      const { count, cur } = map.get(ch)\n      if (cur >= count) {\n        break\n      }\n\n      map.set(ch, { count, cur: cur + 1 })\n\n      if (j === s1.length - 1) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n</code></pre>\n<p>-- Time Complexiy: O(n^2)\n-- Space Complexiy: O(n)</p>\n<h3>Refine Performance TODO:</h3>\n"},"__N_SSG":true}