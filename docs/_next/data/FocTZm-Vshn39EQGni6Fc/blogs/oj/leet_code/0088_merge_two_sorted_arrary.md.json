{"pageProps":{"blog":{"name":"0088_merge_two_sorted_arrary.md","categories":["oj","leet_code"],"content":"\n# Merge Two Sorted Array\n\n## Description\n\n[ref](https://leetcode.com/problems/merge-sorted-array/)\n\n## Solutions\n\n### Recursive Version\n\n```javascript\n/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */\nvar merge = function (nums1, m, nums2, n) {\n  let idx = m + n - 1\n  let idx1 = m - 1\n  let idx2 = n - 1\n\n  while (idx1 >= 0 && idx2 >= 0) {\n    nums1[idx--] = nums1[idx1] > nums2[idx2] ? nums1[idx1--] : nums2[idx2--]\n  }\n\n  while (idx2 >= 0) {\n    nums1[idx--] = nums2[idx2--]\n  }\n}\n```\n\n- Time Complexity: O(m + n)\n- Space Complexity: O(m + n)\n","meta":{"title":"Merge Two Sorted Array","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Merge Two Sorted Array</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/merge-sorted-array/\">ref</a></p>\n<h2>Solutions</h2>\n<h3>Recursive Version</h3>\n<pre><code>/**\n * @param {number[]} nums1\n * @param {number} m\n * @param {number[]} nums2\n * @param {number} n\n * @return {void} Do not return anything, modify nums1 in-place instead.\n */\nvar merge = function (nums1, m, nums2, n) {\n  let idx = m + n - 1\n  let idx1 = m - 1\n  let idx2 = n - 1\n\n  while (idx1 >= 0 &#x26;&#x26; idx2 >= 0) {\n    nums1[idx--] = nums1[idx1] > nums2[idx2] ? nums1[idx1--] : nums2[idx2--]\n  }\n\n  while (idx2 >= 0) {\n    nums1[idx--] = nums2[idx2--]\n  }\n}\n</code></pre>\n<ul>\n<li>Time Complexity: O(m + n)</li>\n<li>Space Complexity: O(m + n)</li>\n</ul>\n"},"__N_SSG":true}