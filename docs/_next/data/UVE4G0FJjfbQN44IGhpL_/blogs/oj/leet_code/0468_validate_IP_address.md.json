{"pageProps":{"blog":{"name":"0468_validate_IP_address.md","categories":["oj","leet_code"],"content":"\n# Validate IP Address\n\n## Description\n\n[doc](https://leetcode.com/problems/validate-ip-address/)\n\n## Solutions\n\n### First Idea\n\n```javascript\nfunction isIPv4(ip) {\n  const digits = ip.split('.')\n  if (digits.length !== 4) {\n    return false\n  }\n\n  if (digits.some((v) => v.length < 1 || (v.length > 1 && v[0] === '0'))) {\n    return false\n  }\n\n  if (digits.some((v) => !/^[\\d]*$/.test(v))) {\n    return false\n  }\n\n  if (\n    digits.map((v) => parseInt(v)).some((v) => isNaN(v) || v < 0 || v > 255)\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction isIPv6(ip) {\n  const digits = ip.split(':')\n  if (digits.length !== 8) {\n    return false\n  }\n\n  if (digits.some((v) => v.length < 1 || v.length > 4)) {\n    return false\n  }\n\n  if (digits.some((v) => !/^[\\da-fA-F]*$/.test(v))) {\n    return false\n  }\n\n  if (digits.some((v) => isNaN(parseInt(v, 16)))) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} queryIP\n * @return {string}\n */\nvar validIPAddress = function (queryIP) {\n  if (isIPv4(queryIP)) {\n    return 'IPv4'\n  }\n\n  if (isIPv6(queryIP)) {\n    return 'IPv6'\n  }\n\n  return 'Neither'\n}\n```\n","meta":{"title":"Validate IP Address","date":"Tue Feb 22 2022 00:00:00 GMT+0000 (Coordinated Universal Time)","tags":"oj","private":false}},"html":"<h1>Validate IP Address</h1>\n<h2>Description</h2>\n<p><a href=\"https://leetcode.com/problems/validate-ip-address/\">doc</a></p>\n<h2>Solutions</h2>\n<h3>First Idea</h3>\n<pre><code>function isIPv4(ip) {\n  const digits = ip.split('.')\n  if (digits.length !== 4) {\n    return false\n  }\n\n  if (digits.some((v) => v.length &#x3C; 1 || (v.length > 1 &#x26;&#x26; v[0] === '0'))) {\n    return false\n  }\n\n  if (digits.some((v) => !/^[\\d]*$/.test(v))) {\n    return false\n  }\n\n  if (\n    digits.map((v) => parseInt(v)).some((v) => isNaN(v) || v &#x3C; 0 || v > 255)\n  ) {\n    return false\n  }\n\n  return true\n}\n\nfunction isIPv6(ip) {\n  const digits = ip.split(':')\n  if (digits.length !== 8) {\n    return false\n  }\n\n  if (digits.some((v) => v.length &#x3C; 1 || v.length > 4)) {\n    return false\n  }\n\n  if (digits.some((v) => !/^[\\da-fA-F]*$/.test(v))) {\n    return false\n  }\n\n  if (digits.some((v) => isNaN(parseInt(v, 16)))) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} queryIP\n * @return {string}\n */\nvar validIPAddress = function (queryIP) {\n  if (isIPv4(queryIP)) {\n    return 'IPv4'\n  }\n\n  if (isIPv6(queryIP)) {\n    return 'IPv6'\n  }\n\n  return 'Neither'\n}\n</code></pre>\n"},"__N_SSG":true}